#+title: How to setup a computer on different operating systems

* linux
** distro-specific setup
*** fedora
**** tweak dnf settings
Add the following lines to =/etc/dnf/dnf.conf=:
#+begin_src conf
defaultyes=True
max_parallel_downloads=15
fastestmirror=True
#+end_src

**** enable rpmfusion
Double-check that the command and urls are the same at [[https://rpmfusion.org/Configuration#Command_Line_Setup_using_rpm][the rpmfusion website]], and then run
the following command:
#+begin_src shell
sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
#+end_src

**** run =~/sbin/fedora-install=
If you are on x86, rather than ARM, add the ~--with-copr~ flag to the script invocation;
otherwise, you'll have to manually enable COPR repos (there's a list in =~lib/copr-repos=,
but you won't be able to use packages from all of them, as some are x86-specific).

**** install docker
Use the documentation [[https://developer.fedoraproject.org/tools/docker/docker-installation.html][here]], or if you trust this document to be up-to-date follow along:

Add the docker-ce repository:
#+begin_src shell
# install the necessary packages
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io

# use docker without sudo
sudo groupadd docker && sudo gpasswd -a ${USER} docker
newgrp docker

# autostart docker daemon
sudo systemctl enable docker

# verify:
docker run hello-world
#+end_src

*** arch
**** start by installing endeavourOS sway edition rather than vanilla arch
This isn't a must-do, just a convenience. EOS has nice defaults, many of which I have
adopted into these dotfiles, and is a much simpler installation process.

**** TODO tweak settings in =/etc/pacman.conf=
parallelism, etc

**** run ~~/sbin/arch-install~

**** don't forget ~systemctl reboot~

* MacOS
** Install homebrew
** run =~/sbin/macos-install= and =~/sbin/macos-write-defaults=
Don't forget to run ~killall Dock~ after =~/sbin/macos-write-defaults=
** run ~make macos~

* Securely migrating the contents of a home directory
To create an encrypted tarball of the directory, run:
#+begin_src shell
# should probably run as root so you don't see a long-running job die on some random
# file's permissions
tar -czf - * | openssl enc -e -aes256 -out secured.tar.gz
#+end_src

To decrypt and extract into a subdirectory (either to test or to unpackage the downloaded tarball):
#+begin_src shell
mkdir tmphome
# don't run this one as root if you want to own your own files
openssl enc -d -aes256 -in secured.tar.gz | tar xz -C tmphome
#+end_src

If everything in there is in order, you can move everything to the ~$HOME~ toplevel:
#+begin_src shell
rsync --recursive \
      --verbose \
      --backup --suffix=.installed.orig \
      tmphome/ $HOME/
rm -r tmphome
#+end_src
