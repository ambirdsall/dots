#+TITLE: dotfiles
#+startup: overview

These are my linux/macOS configuration files. They're tracked in a git repository separate from the
working tree, which is just my home directory; this replaces an ongoing symlink song and dance for a
little upfront setup effort. Given that the upfront work can be copy-pasted, it's a pretty great
tradeoff.

* to install on a new computer
To get up and running:
1) clone the dotfiles repo
2) copy the files over to their proper locations, and
3) configure the dotfile git repo to ignore all untracked files

The last step is so neither I nor you ever accidentally push our whole home directory to
github, lol. So:
#+BEGIN_SRC sh
git clone --separate-git-dir=$HOME/.dots git@github.com:ambirdsall/dots.git tmpdotfiles
rsync --recursive \
      --verbose \
      --exclude '.git' \
      --backup --suffix=.dots.orig \
      tmpdotfiles/ $HOME/
rm -r tmpdotfiles

git --git-dir=$HOME/.dots/ --work-tree=$HOME config --local status.showUntrackedFiles no
#+END_SRC

If you've already installed emacs, you can now run
#+BEGIN_SRC sh
make install
#+END_SRC

followed by whichever of the following is appropriate
#+begin_src shell
make linux
make macos
#+end_src

Now, aspirationally:

#+begin_src shell
dots doctor
#+end_src

Once you have a clean bill of health, tangle all literate configs with
#+begin_src shell
dots tangle
#+end_src

* managing this git directory
The =~/bin/dots= file provides a =dots= command to handle all interaction with the git repo. It wraps
~git~, passing the correct directories to ~--git-dir~ and ~--work-tree~ and paving a few common paths:
- ~dots~ :: defaults to ~git status -s~ when called with no arguments
- ~dots c some commit message~ :: expands to ~dots commit -m "some commit message"~

* todo list
** TODO install roboto mono in all OSes (for experimenting with NANO emacs)
** TODO persistently tangle literate configs in =dots= repo on save
*** TODO define a new ~after-save~ hook in emacs to tangle dots literate configs based on file-local variables
**** org-mode-specific
**** usually a noop
**** relies on buffer-local variables being defined
*** TODO set those values for all literate configs with magic comments
*** TODO ...profit?
** TODO cli script to tangle all literate configs in =dots= repo
cf.
#+begin_src shell
doom help +org tangle
#+end_src

*** TODO =dots tangle=? =dots tangle <file>?=
*** TODO =make tangle= maybe should exist too but only by shelling out to =dots=.
* computer problems I have known
** [[https://everymac.com/ultimate-mac-lookup/?search_keywords=MacBookPro12,1][macbook pro 12,1]] + xfce :: fixing scroll directions
I had to add this to =/usr/share/X11/xorg.conf.d/40-libinput.conf=, with separate edits needed for the ~Section~
entries for =pointer= and =touchpad=, e.g.:
#+begin_src conf
Section "InputClass"
        Identifier "libinput touchpad catchall"
        MatchIsPointer "on"
        MatchDevicePath "/dev/input/event*"
        Driver "libinput"
        # ðŸ‘‹ðŸ‘‡ yes hello this is new
        Option "NaturalScrolling" "true"
#+end_src

After doing so, I also had to set the scrolling direction inside ~xfce4-settings-manager~ >
=Mouse and Touchpad= separately for each mouse/touchpad device; then log out and back into
XFCE. Only /then/ could I override the default scrolling direction (which was the wrong
one).
